/*
 * Copyright (c) 2022 The ZMK Contributors'
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define QWR 1
#define LWR 2
#define RSE 3
#define FNC 4

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp C_PLAY_PAUSE>, <&kp C_NEXT>, <&kp C_PREV>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            bindings = <
                &kp ESC     &kp Q        &kp W       &kp F        &kp P       &kp B        &kp J       &kp L       &kp U       &kp Y     &kp SQT       &kp BSPC  
                &kp TAB     &kp A        &kp R       &kp S        &kp T       &kp G        &kp M       &kp N       &kp E       &kp I     &kp O         &kp SEMI
                &kp LSHFT   &mt LC(Z) Z  &kp X       &mt LC(C) C  &kp D       &mt LC(V) V  &kp K       &kp H       &kp COMMA   &kp DOT   &kp  FSLH     &kp ENTER
                &kp LCTRL   &kp LALT     &kp LGUI    &mo FNC      &mo LWR     &kp SPACE    &mo RSE     &kp LEFT    &kp DOWN    &kp UP    &kp RIGHT     &td0
            >;
        };

        qwerty_layer {
            bindings = <
                &trans     &kp Q       &kp W       &kp E       &kp R       &kp T       &kp Y       &kp U       &kp I       &kp O     &kp P       &trans  
                &trans     &kp A       &kp S       &kp D       &kp F       &kp G       &kp H       &kp J       &kp K       &kp L     &trans      &trans
                &trans     &kp Z       &kp X       &kp C       &kp V       &kp B       &kp N       &kp M       &trans      &trans    &trans      &trans
                &trans     &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans    &trans      &trans
            >;
        };

        lower_layer {
            sensor-bindings = <&inc_dec_kp PLUS MINUS>;
            bindings = <
                &kp TILDE   &kp EXCL    &kp AT      &kp HASH    &kp DLLR    &kp PRCNT   &kp CARET   &kp AMPS    &kp STAR    &kp LPAR    &kp RPAR        &kp DEL
                &trans      &trans      &trans      &trans      &trans      &trans      &trans      &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT       &kp AT
                &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &kp LBRC    &kp RBRC    &kp C_VOL_UP    &trans
                &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &kp QMARK   &trans      &kp C_VOL_DN    &trans                    
            >;
        };

        raise_layer {
            bindings = <
                &kp GRAVE    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5       &kp N6       &kp N7       &kp N8       &kp N9       &kp N0           &kp BSPC
                &trans       &kp UNDER    &kp KP_MINUS &kp KP_EQUAL &kp KP_PLUS  &trans       &trans       &trans       &kp MINUS    &kp EQUAL    &trans           &kp BSLH
                &trans       &kp PIPE2    &kp AMPS     &trans       &trans       &trans       &trans       &trans       &kp LBKT     &kp RBKT     &kp C_VOL_UP     &trans
                &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans       &kp C_VOL_DN     &trans                    
            >;            
        };

        function_layer {
            bindings = <
                &reset          &kp F1          &kp F2          &kp F3          &kp F4          &kp F5          &kp F6      &kp F7      &kp F8      &kp F9      &kp F10     &tog QWR
                &bootloader     &trans          &trans          &trans          &trans          &trans          &trans      &trans      &kp MINUS   &kp F11     &kp F12     &trans
                &bt BT_CLR      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &trans      &trans      &trans      &trans      &trans      &trans
                &out OUT_BLE    &out OUT_USB    &out OUT_TOG    &trans          &trans          &trans          &trans      &trans      &trans      &trans      &trans      &trans                    
            >;         
        };
    };
};
